@page "/Admin/CatalogItems"
@using SimpleStore.Core.Services.Products
@using SimpleStore.Framework.Types
@using SimpleStore.Web.Areas.Admin.Models.CatalogItems
@inject IProductService ProductService

<Page>
    <Panel Title="Produtos">
        <HeaderActions>
            <a class="btn btn-primary" href="Admin/CatalogItems/Edit">
                <span class="iconify" data-icon="fluent:add-20-filled" data-width="20" data-height="20"></span>
                Adicionar novo
            </a>
        </HeaderActions>
        <Content>
            <PagedTable Context="Items" OnPageChange="Fill">
                <Head>
                    <tr>
                        <th>Nome</th>
                        <th>Publicado</th>
                    </tr>
                </Head>
                <RowTemplate>
                    <tr>
                        <td><a href="/Admin/CatalogItems/Edit/@context.Id">@context.Name</a></td>
                        <td>@context.Published</td>
                    </tr>
                </RowTemplate>
            </PagedTable>
        </Content>
    </Panel>
</Page>

@code
{
    public PagedList<CatalogItemViewModel> Items { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Items = new PagedList<CatalogItemViewModel>();
        await Fill(1);
    }

    private async Task Fill(int page)
    {
        var products = await ProductService.Get(page, 5, null);
        if(products != null && products.Count > 0)
        {
            Items.Clear();
            Items.TotalCount = products.TotalCount;
            Items.PageSize = products.PageSize;
            Items.PageIndex = products.PageIndex;

            foreach(var p in products)
            {
                Items.Add(new CatalogItemViewModel().FromCatalogItem(p));
            }
        }
    }
}