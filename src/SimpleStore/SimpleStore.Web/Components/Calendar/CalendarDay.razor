@using System.Text
@if (Visualization == CalendarVisualization.Week)
{
    <div class="day col ps-2">
        <span class="small text-muted">@Date.ToString("dddd")</span>
        <h5>@Date.ToString("dd/MM")</h5>
    </div>
}
else
{
    <div class="day col @GetDayClasses()" @onclick="@Clicked">
        <div class="square-box">
            <div class="square-content p-1">
                <h5>
                    @Date.Day
                </h5>
                <span class="check-icon">
                    <span class="iconify" data-icon="fluent:checkmark-20-regular" data-width="20" data-height="20">
                    </span>
                </span>
            </div>
        </div>
    </div>
}

@code {
    private bool _sameMonth;

    [CascadingParameter]
    public DateTime BaseDate { get; set; }

    [Parameter]
    public CalendarVisualization Visualization { get; set; }

    [Parameter]
    public DateTime Date { get; set; }

    [Parameter]
    public bool Checked { get; set; }

    [Parameter]
    public bool Marked { get; set; }

    [Parameter]
    public bool Disabled { get; set; } = false;

    [Parameter]
    public EventCallback<DateTime> OnClick { get; set; }

    protected override void OnParametersSet()
    {
        _sameMonth = Date.Month == BaseDate.Month;
    }

    private async Task Clicked()
    {
        if (!Disabled)
            await OnClick.InvokeAsync(Date);
    }

    private string GetDayClasses()
    {
        var classes = new StringBuilder();

        if (!_sameMonth)
        {
            classes.Append(" text-disabled"); 
        }

        if (Checked)
        {
            classes.Append(" checked");
        }

        if(Marked)
        {
            classes.Append(" marked");
        }

        if(Disabled)
        {
            classes.Append(" disabled");
        }

        return classes.ToString();
    }
}
